<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "9.2.17.0_4";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>buffer_create_from_vertex_buffer_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for buffer_create_from_vertex_buffer_ext"/>
  <meta name="rh-index-keywords" content="buffer_create_from_vertex_buffer_ext"/>
  <meta name="search-keywords" content="buffer_create_from_vertex_buffer_ext,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="buffer_create_from_vertex_buffer_ext">
        <span>buffer_create_from_vertex_buffer_ext</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_create_from_vertex_buffer_ext</h1>
  <p>이 함수를 사용하여 게임에서 이전에 생성 된 <a href="../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">정점 버퍼</a> 의 데이터로 채워진 버퍼로 메모리의 일부를 할당합니다. 이 함수는 변수에 저장해야하며 <i>버퍼에</i> 대한 모든 추가 함수 호출에 사용해야하는 고유 한 <i>버퍼 ID</i> 를 반환합니다. 이 함수는 버퍼 유형을 정의하는 데 다음 상수가 사용되는 정점 버퍼의 id (예 : <a href="../Drawing/Primitives/vertex_create_buffer.htm"><tt>vertex_create_buffer ()</tt></a> 함수에서 반환)를 사용합니다.</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>일정한</th>
        <th>기술</th>
      </tr>
      <tr>
        <td>buffer_fixed</td>
        <td>고정 크기의 버퍼.</td>
      </tr>
      <tr>
        <td>buffer_grow</td>
        <td>데이터가 추가 될 때 동적으로 &quot;증가&quot;하는 버퍼</td>
      </tr>
      <tr>
        <td>buffer_wrap</td>
        <td>데이터가 &quot;랩핑&quot;되는 버퍼입니다. 추가되는 데이터가 버퍼 크기의 한계에 도달하면 덮어 쓰기가 버퍼의 시작 부분에 다시 배치되고 이후부터 계속해서 쓰기가 계속됩니다.</td>
      </tr>
      <tr>
        <td>buffer_fast</td>
        <td>읽기 / 쓰기 속도가 매우 빠른 특수 &quot;스트립 형&quot;버퍼. <tt>buffer_u8</tt> <a href="buffer_write.htm">데이터 유형</a> 에만 사용할 수 있으며 1 바이트로 정렬 <i>되어야합니다</i> .</td>
      </tr>
      <tr>
        <td>buffer_vbuffer</td>
        <td>이 유형의 버퍼는 꼭짓점 버퍼로만 사용됩니다.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>버퍼 유형 외에도 버퍼의 <i>바이트 정렬</i> 을 설정해야합니다. 이 값은 버퍼에 저장하려는 데이터에 따라 다르며 대부분의 경우 1 값은 완벽합니다. 그러나 일부 작업의 경우 특정 정렬이 <i>필수적</i> 이며 잘못된 정렬로 인해 오류가 발생할 수 있습니다 (정렬에 대한 자세한 내용은 <a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">버퍼 정렬</a> 참조). 다음은 각 데이터 유형에 가장 적합한 값을 보여주는 일반 안내서입니다 (의심 할 경우 1의 정렬 사용).</p>
  <ul class="colour">
    <li>문자열은 1 바이트로 정렬되어야합니다.</li>
    <li>부호있는 또는 부호없는 8 비트 정수는 임의의 값으로 정렬 될 수 있지만 빠른 버퍼 ( <a href="buffer_write.htm"><tt>buffer_write ()</tt></a> 참조)의 경우 1로 정렬 <i>되어야합니다</i> .</li>
    <li>부호있는 또는 부호없는 16 비트 정수는 2 바이트로 정렬되어야합니다.</li>
    <li>부호있는 또는 부호없는 32 비트 정수는 4 바이트로 정렬되어야합니다.</li>
    <li>최대 16 비트의 부동 소수점은 2 바이트로 정렬되어야합니다. <i>(현재 지원되지 않습니다!)</i></li>
    <li>최대 32 비트의 부동 소수점은 4 바이트로 정렬되어야합니다.</li>
    <li>최대 64 비트의 부동 소수점은 8 바이트로 정렬되어야합니다.</li>
  </ul>
  <p class="note"><b>참고</b> : 정점 버퍼는 1 바이트로 정렬되지만 정점 데이터는 단순히 버퍼로의 원시 메모리 복사본이므로 데이터 처리 방법에 따라 정렬로 버퍼를 만들 수 있습니다.</p>
  <p>마지막 두 인수는 새로 만든 버퍼에 복사 할 정점 데이터의 범위를 지정하는 데 사용됩니다. 시작 정점은 0과 정점 수 -1 사이에있을 수 있으며 그 시점부터 복사 할 정점 수를 지정합니다. 정점 버퍼에서 <tt><a href="../Drawing/Primitives/vertex_get_number.htm">vertex_get_number ()</a></tt> 함수를 사용하여 저장된 총 정점 수를 얻을 수 있습니다.</p>
  <p class="note"><b>참고</b> : 메모리 누수를 방지하기 위해 더 이상 필요없는 메모리에서 이와 같이 동적으로 생성 된 리소스를 제거하는 것이 중요합니다. 따라서 생성 한 버퍼를 완료하면 <span style="font-size:1px;"><a href="buffer_delete.htm"><tt style="font-size: 14px">buffer_delete ()를</tt></a></span> 사용하여 다시 해제해야합니다. 또한 새 버퍼를 만드는 데 사용 된 정점 버퍼도 메모리에서 제거되지 않으며 더 이상 필요하지 않은 경우 <span style="font-size:1px;"><a href="../Drawing/Primitives/vertex_delete_buffer.htm"><tt style="font-size: 14px">vertex_delete_buffer ()</tt></a></span> 함수를 사용해야합니다.</p>
  <p> </p>
  <h4>구문:</h4>
  <p class="code">buffer_create_from_vertex_buffer_ext(vertex_buffer, type, alignment, start_vertex, num_vertices)</p>
  <table>
    <tbody>
      <tr>
        <th>논의</th>
        <th>기술</th>
      </tr>
      <tr>
        <td>버텍스 _ 버퍼</td>
        <td>사용할 버텍스 버퍼 인덱스.</td>
      </tr>
      <tr>
        <td>유형</td>
        <td>작성할 버퍼의 유형입니다 (아래 상수 목록 참조).</td>
      </tr>
      <tr>
        <td>조정</td>
        <td>버퍼의 바이트 정렬</td>
      </tr>
      <tr>
        <td>start_vertex</td>
        <td>시작 정점.</td>
      </tr>
      <tr>
        <td>num_vertices</td>
        <td>복사 할 총 정점 수입니다.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>보고:</h4>
  <p class="code">Int (Vertex buffer ID)</p>
  <p> </p>
  <h4>예:</h4>
  <p class="code">var v_num = vertex_get_number(model_buff); player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1, 0, v_num - 1);</p>
  <p>위의 코드는 메모리를 버퍼에 할당 한 다음 주어진 정점 버퍼에서 모든 정점의 데이터를 여기에 복사하여 나중에 사용할 수 있도록 변수 &quot;player_buffer&quot;에 저장된 새 버퍼의 인덱스를 반환합니다.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language/GML_Reference/Buffers/buffer_create_from_vertex_buffer_ext.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="Buffers.htm">버퍼</a></div>
        <div style="float:right">다음: <a href="buffer_delete.htm">buffer_delete</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
buffer_create_from_vertex_buffer_ext
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create_from_vertex_buffer_ext
-->

</body></html> 